# Статград (май)
# задача на органирацию очереди 

with open("26.txt") as f:
  n = int(f.readline())
  a = []
  for s in f:
    st, da, db, t = s.split() # данные расположены так: прибытие, длительность обр. A, длит. обр. B, маркер, какая операция первая
    st, da, db = int(st), int(da), int(db)
    a.append([st, st, da, db, t, 1]) # первое st - время начала обр-тки, второе - время поступления 

a.sort()
qA = []
qB = []

ans1 = 0
while a:
  st, post, da, db, t, n = a.pop(0)
  qA = [x for x in qA if x > st] # оставляем в очереди те детали, которые обрабатываются
  qB = [x for x in qB if x > st]
  # организуем очередь (первая обработка детали)
  if t == "A":
    if len(qA) == 0: # если на станке нет ни одной детали - помещаем сразу
      end = st + da
    else:
      end = max(qA) + da # соответственно, согласно логике очереди
      ans1 += 1 # деталь, которая поступила не сразу на станок
    qA.append(end)
  if t == "B":
    if len(qB) == 0:
      end = st + db
    else:
      end = max(qB) + db
    qB.append(end)

# если деталь прошла только первую очередь, то она должна пройти и вторую, => ИНФУ о ней НУЖНО ВЕРНУТЬ в общий выбор
  if n == 1:
    a.append([end, post, da, db, 'B' if t == 'A' else 'A']) # [0]: время начала обработки, [1]: время изначального поступления 
    a.sort()
print(ans1, max(qA)) # второй ответ - время окончания обработки всех деталей (последней детали) на станке A
