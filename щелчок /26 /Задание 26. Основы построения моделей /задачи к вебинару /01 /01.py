'''
Входной файл содержит заявки пассажиров, желающих сдать свой багаж в камеру хранения. В заявке указаны время сдачи багажа и время освобождения ячейки (в минутах от начала суток).
Багаж одного пассажира размещается в одной свободной ячейке с минимальным номером. 
Ячейки пронумерованы начиная с единицы. 
Размещение багажа в ячейке или её освобождение происходит в течение 1 мин. Багаж можно поместить в только что освобождённую ячейку начиная со следующей минуты. 
Если в момент сдачи багажа свободных ячеек нет, то пассажир уходит. Определите, сколько пассажиров сможет сдать свой багаж в течение 24 ч и какой номер будет иметь ячейка, 
которую займут последней. Если таких ячеек несколько, укажите минимальный номер ячейки.

Входные данные представлены в файле 26-111.txt следующим образом. 
В первой строке входного файла находится натуральное число K, не превышающее 1000, – количество ячеек в камере хранения. 
Во второй строке – натуральное число N (N  ≤ 1000), обозначающее количество пассажиров. Каждая из следующих N строк содержит два натуральных числа, 
каждое из которых не превышает 1440: указанное в заявке время размещения багажа в ячейке и время освобождения ячейки (в минутах от начала суток).

Запишите в ответе два числа: количество пассажиров, которые смогут воспользоваться камерой хранения, и номер последней занятой ячейки.

Пример входного файла:
2
5
30 60
40 1000
59 60
61 1000
1010 1440

При таких исходных данных положить вещи в камеру хранения смогут первый, второй, четвёртый и пятый пассажиры. 
Последний пассажир положит вещи в ячейку 1, так как ячейки 1 и 2 будут свободны. Ответ: 4 1.
'''

with open("26.txt") as f:
    k = int(f.readline())
    n = int(f.readline())
    xs = sorted([list(map(int, i.split())) for i in f])

# 1 способ (ПРЕДПОЧТИТЕЛЬНЫЙ)
'''
его идея в том, чтобы заранее смоделировать наши камеры хранения в виде массива, потом брать по багажу и искать первое для него свободное место в камере хранения
'''

cell = [[] for i in range(k)]
ans1 = 0
mxMin = 0 = ans2
for box in xs:
    for j in range(k):
        if (not cell[j]) or (box[0] > cell[-1][1]): # если ячейка вообще никем не была занята или ячейка освободится до того, как следующий положит багаж
            cell[j].append(box)
            ans1 += 1 # считаем кол-во людей, сдавших багаж в камеру хранения
            if box[0] > mxMin: # если время сдачи багажа больше (т.к тот, кто самым последним сдаст багаж и будет за номером последней занятой ячейки), чем максимальное время сдачи багажа до, то..
                mxMin = box[0]
                ans2 = j + 1
            break
print(ans1, ans2)

# -------------------------------------------------------------------------------------------------------------------------------------------------------------

# 2 способ
ans1 = 0
mxMin = 0
for j in range(k):
    cell = [xs[0]]
    xs.pop(0)
    for i in range(len(xs)):
        if xs[i][0] > cell[-1][1]:
            cell.append(xs[i])
            xs[i] = [0, 0]
    if cell[-1][0] == 999:
        print(j + 1)
        break
    ans1 += len(cell)
    # mxMin = max(ans2, cell[-1][0])
print(ans1)
